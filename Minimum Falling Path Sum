class Solution:
    def minFallingPathSum(self, matrix: List[List[int]]) -> int:
        n = len(matrix)
        dp = [[-1 for _ in range(n)] for _ in range(n)]
        def solve(i, j):
            if i == n - 1:
                return matrix[i][j]
            if dp[i][j] != -1:
                return dp[i][j]
            down = matrix[i][j] + solve(i + 1, j)
            left = matrix[i][j] + (solve(i + 1, j - 1) if j > 0 else float('inf'))
            right = matrix[i][j] + (solve(i + 1, j + 1) if j < n - 1 else float('inf'))
            dp[i][j] = min(down, left, right)
            return dp[i][j]
        min_sum = float('inf')
        for j in range(n):
            min_sum = min(min_sum, solve(0, j))
        return min_sum
